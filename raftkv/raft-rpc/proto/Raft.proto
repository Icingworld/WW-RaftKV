syntax = "proto3";

package WW;

option cc_generic_services = true;

// 日志条目
message LogEntry {
    int64 index = 1;                // 日志索引
    int64 term = 2;                 // 日志任期
    bytes command = 3;              // 日志内容
}

// 选举投票请求
message RequestVoteRequest {
    int64 term = 1;                 // 候选人任期
    int64 candidate_id = 2;         // 候选人 ID
    int64 last_log_index = 3;       // 候选人最后日志条目索引
    int64 last_log_term = 4;        // 候选人最后日志条目任期
}

// 选举投票响应
message RequestVoteResponse {
    int64 term = 1;                 // 当前节点任期
    bool vote_granted = 2;          // 当前节点是否投票
}

// 日志条目请求
message AppendEntriesRequest {
    int64 term = 1;                 // Leader 任期
    int64 leader_id = 2;            // Leader ID
    int64 prev_log_index = 3;       // 上一个日志索引
    int64 prev_log_term = 4;        // 上一个日志任期
    repeated LogEntry entries = 5;  // 日志条目，为空则是心跳包
    int64 leader_commit = 6;        // Leader 最新已提交索引
}

// 日志条目响应
message AppendEntriesResponse {
    int64 term = 1;                 // 当前节点任期
    bool success = 2;               // 是否成功追加
    int64 last_log_index = 3;       // Follower 同步位置
}

// 安装快照请求
message InstallSnapshotRequest {
    int64 term = 1;                 // Leader 当前任期
    int64 leader_id = 2;            // Leader ID
    int64 offset = 3;               // 快照偏移
    int64 last_included_index = 4;  // 快照覆盖的最后一条日志索引
    int64 last_included_term = 5;   // 快照覆盖的最后一条日志任期
    bytes data = 6;                 // 快照数据
    bool done = 7;                  // 快照是否传输结束
}

// 安装快照响应
message InstallSnapshotResponse {
    int64 term = 1;                 // Follower 当前任期
}

// Raft 服务
service RaftService {
    rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse);
    rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse);
    rpc InstallSnapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse);
}
