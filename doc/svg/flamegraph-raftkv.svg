<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1286.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1269" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1269" > </text>
<g id="frames">
<g >
<title>__wake_up_sync_key (10,101,010 samples, 0.14%)</title><rect x="298.9" y="373" width="1.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="301.88" y="383.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="912.5" y="597" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="915.54" y="607.5" ></text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="932.1" y="885" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="935.13" y="895.5" ></text>
</g>
<g >
<title>tcp_recvmsg (676,767,670 samples, 9.27%)</title><rect x="803.2" y="629" width="109.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="806.20" y="639.5" >tcp_recvmsg</text>
</g>
<g >
<title>do_futex (292,929,290 samples, 4.01%)</title><rect x="405.0" y="1125" width="47.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="407.97" y="1135.5" >do_f..</text>
</g>
<g >
<title>malloc (10,101,010 samples, 0.14%)</title><rect x="1188.4" y="1205" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.37" y="1215.5" ></text>
</g>
<g >
<title>mod_memcg_state (10,101,010 samples, 0.14%)</title><rect x="336.4" y="869" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="339.42" y="879.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (838,383,830 samples, 11.48%)</title><rect x="173.2" y="869" width="135.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="176.21" y="879.5" >__tcp_transmit_skb</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1141" width="491.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="455.30" y="1151.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,313,131,300 samples, 17.98%)</title><rect x="478.4" y="869" width="212.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="481.41" y="879.5" >schedule_hrtimeout_range_cl..</text>
</g>
<g >
<title>net_rx_action (686,868,680 samples, 9.41%)</title><rect x="184.6" y="645" width="111.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="187.63" y="655.5" >net_rx_action</text>
</g>
<g >
<title>__memset (10,101,010 samples, 0.14%)</title><rect x="808.1" y="517" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="811.09" y="527.5" ></text>
</g>
<g >
<title>irqentry_exit (20,202,020 samples, 0.28%)</title><rect x="47.5" y="1061" width="3.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="50.54" y="1071.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="932.1" y="901" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="935.13" y="911.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="912.5" y="629" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="915.54" y="639.5" ></text>
</g>
<g >
<title>update_blocked_averages (20,202,020 samples, 0.28%)</title><rect x="295.6" y="629" width="3.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="298.62" y="639.5" ></text>
</g>
<g >
<title>muduo::net::Channel::handleEventWithGuard (989,898,980 samples, 13.55%)</title><rect x="754.2" y="981" width="160.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="757.23" y="991.5" >muduo::net::Channel:..</text>
</g>
<g >
<title>net_rx_action (10,101,010 samples, 0.14%)</title><rect x="298.9" y="613" width="1.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="301.88" y="623.5" ></text>
</g>
<g >
<title>[[vdso]] (90,909,090 samples, 1.24%)</title><rect x="919.1" y="965" width="14.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="922.07" y="975.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::runAt (545,454,540 samples, 7.47%)</title><rect x="50.8" y="1125" width="88.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="53.80" y="1135.5" >muduo::net..</text>
</g>
<g >
<title>tcp_filter (10,101,010 samples, 0.14%)</title><rect x="186.3" y="485" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="189.27" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (989,898,980 samples, 13.55%)</title><rect x="754.2" y="949" width="160.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="757.23" y="959.5" >std::_Function_handl..</text>
</g>
<g >
<title>muduo::net::EventLoop::queueInLoop (505,050,500 samples, 6.92%)</title><rect x="953.3" y="1157" width="81.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="956.35" y="1167.5" >muduo::ne..</text>
</g>
<g >
<title>void std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1109" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1036.32" y="1119.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="49.2" y="997" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="52.17" y="1007.5" ></text>
</g>
<g >
<title>resolve_normal_ct (10,101,010 samples, 0.14%)</title><rect x="819.5" y="405" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="822.52" y="415.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (414,141,410 samples, 5.67%)</title><rect x="813.0" y="533" width="66.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="815.99" y="543.5" >__tcp_t..</text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1141" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1036.32" y="1151.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;::operator (10,101,010 samples, 0.14%)</title><rect x="24.7" y="933" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="27.69" y="943.5" ></text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void  (10,101,010 samples, 0.14%)</title><rect x="134.0" y="1093" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="137.04" y="1103.5" ></text>
</g>
<g >
<title>eventfd_read (10,101,010 samples, 0.14%)</title><rect x="775.4" y="709" width="1.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="778.45" y="719.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (20,202,020 samples, 0.28%)</title><rect x="401.7" y="1109" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="404.70" y="1119.5" ></text>
</g>
<g >
<title>vfs_write (313,131,310 samples, 4.29%)</title><rect x="982.7" y="1029" width="50.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="985.72" y="1039.5" >vfs_w..</text>
</g>
<g >
<title>google::protobuf::internal::AssignDescriptors (10,101,010 samples, 0.14%)</title><rect x="346.2" y="1157" width="1.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="349.21" y="1167.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.14%)</title><rect x="1038.2" y="1173" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1041.22" y="1183.5" ></text>
</g>
<g >
<title>ip_local_deliver (282,828,280 samples, 3.87%)</title><rect x="829.3" y="213" width="45.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="832.31" y="223.5" >ip_l..</text>
</g>
<g >
<title>eventfd_write (292,929,290 samples, 4.01%)</title><rect x="984.4" y="1013" width="47.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="987.36" y="1023.5" >even..</text>
</g>
<g >
<title>asm_sysvec_call_function_single (20,202,020 samples, 0.28%)</title><rect x="47.5" y="1093" width="3.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="50.54" y="1103.5" ></text>
</g>
<g >
<title>security_file_permission (10,101,010 samples, 0.14%)</title><rect x="1031.7" y="997" width="1.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1034.69" y="1007.5" ></text>
</g>
<g >
<title>try_charge_memcg (20,202,020 samples, 0.28%)</title><rect x="339.7" y="869" width="3.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="342.68" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_erase_aux (10,101,010 samples, 0.14%)</title><rect x="19.8" y="949" width="1.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="22.79" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_get_insert_unique_pos (20,202,020 samples, 0.28%)</title><rect x="54.1" y="885" width="3.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="57.07" y="895.5" ></text>
</g>
<g >
<title>tcp_rtt_estimator (10,101,010 samples, 0.14%)</title><rect x="842.4" y="69" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="845.37" y="79.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (636,363,630 samples, 8.71%)</title><rect x="187.9" y="485" width="102.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="190.90" y="495.5" >tcp_v4_do_rcv</text>
</g>
<g >
<title>do_softirq.part.0 (10,101,010 samples, 0.14%)</title><rect x="298.9" y="709" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="301.88" y="719.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::is_void&lt;void&gt;, std::__is_invocable&lt;std::_Bind&lt;void  (989,898,980 samples, 13.55%)</title><rect x="754.2" y="933" width="160.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="757.23" y="943.5" >std::enable_if&lt;std::..</text>
</g>
<g >
<title>[unknown] (50,505,050 samples, 0.69%)</title><rect x="362.5" y="1189" width="8.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="365.53" y="1199.5" ></text>
</g>
<g >
<title>muduo::Timestamp::now (151,515,150 samples, 2.07%)</title><rect x="57.3" y="901" width="24.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="60.33" y="911.5" >m..</text>
</g>
<g >
<title>ip_finish_output (767,676,760 samples, 10.51%)</title><rect x="179.7" y="789" width="124.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="182.74" y="799.5" >ip_finish_output</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1109" width="16.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="17.90" y="1119.5" ></text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (10,101,010 samples, 0.14%)</title><rect x="137.3" y="1061" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="140.30" y="1071.5" ></text>
</g>
<g >
<title>__mmap_region (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1061" width="1.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1186.47" y="1071.5" ></text>
</g>
<g >
<title>mas_wr_walk (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1013" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1186.47" y="1023.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (333,333,330 samples, 4.56%)</title><rect x="822.8" y="389" width="53.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="825.78" y="399.5" >__dev..</text>
</g>
<g >
<title>refill_stock (10,101,010 samples, 0.14%)</title><rect x="338.0" y="869" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="341.05" y="879.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (10,101,010 samples, 0.14%)</title><rect x="814.6" y="405" width="1.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="817.62" y="415.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.14%)</title><rect x="378.9" y="1189" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="381.85" y="1199.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (20,202,020 samples, 0.28%)</title><rect x="1054.5" y="1045" width="3.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1057.54" y="1055.5" ></text>
</g>
<g >
<title>__alloc_skb (10,101,010 samples, 0.14%)</title><rect x="334.8" y="901" width="1.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="337.79" y="911.5" ></text>
</g>
<g >
<title>nf_conntrack_handle_packet (20,202,020 samples, 0.28%)</title><rect x="816.3" y="405" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="819.25" y="415.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (686,868,680 samples, 9.41%)</title><rect x="801.6" y="693" width="110.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="804.56" y="703.5" >do_iter_readv..</text>
</g>
<g >
<title>free@plt (10,101,010 samples, 0.14%)</title><rect x="372.3" y="1189" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="375.32" y="1199.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1125" width="1.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1186.47" y="1135.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,101,010 samples, 0.14%)</title><rect x="1052.9" y="1141" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1055.90" y="1151.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,181,818,170 samples, 16.18%)</title><rect x="152.0" y="1077" width="190.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="154.99" y="1087.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>read (131,313,130 samples, 1.80%)</title><rect x="755.9" y="821" width="21.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="758.86" y="831.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="165.0" y="949" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="168.05" y="959.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="475.1" y="709" width="1.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="478.15" y="719.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.28%)</title><rect x="362.5" y="1173" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="365.53" y="1183.5" ></text>
</g>
<g >
<title>__GI___readv (838,383,830 samples, 11.48%)</title><rect x="778.7" y="805" width="135.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="781.71" y="815.5" >__GI___readv</text>
</g>
<g >
<title>__irq_exit_rcu (60,606,060 samples, 0.83%)</title><rect x="680.8" y="757" width="9.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="683.79" y="767.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (838,383,830 samples, 11.48%)</title><rect x="173.2" y="837" width="135.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="176.21" y="847.5" >__ip_queue_xmit</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::net::Timer*, long&gt;, std::pair&lt;muduo::net::Timer*, long&gt;, std::_Identity&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::less&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt; &gt;::_M_begin (10,101,010 samples, 0.14%)</title><rect x="26.3" y="949" width="1.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="29.32" y="959.5" ></text>
</g>
<g >
<title>nf_confirm (20,202,020 samples, 0.28%)</title><rect x="303.8" y="789" width="3.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="306.78" y="799.5" ></text>
</g>
<g >
<title>read_tsc (161,616,160 samples, 2.21%)</title><rect x="308.7" y="869" width="26.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="311.67" y="879.5" >r..</text>
</g>
<g >
<title>[[vdso]] (20,202,020 samples, 0.28%)</title><rect x="1185.1" y="1189" width="3.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1188.10" y="1199.5" ></text>
</g>
<g >
<title>run_rebalance_domains (60,606,060 samples, 0.83%)</title><rect x="680.8" y="725" width="9.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="683.79" y="735.5" ></text>
</g>
<g >
<title>consume_stock (10,101,010 samples, 0.14%)</title><rect x="339.7" y="853" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="342.68" y="863.5" ></text>
</g>
<g >
<title>get_itimerspec64 (10,101,010 samples, 0.14%)</title><rect x="129.1" y="853" width="1.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="132.14" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (272,727,270 samples, 3.73%)</title><rect x="830.9" y="149" width="44.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="833.94" y="159.5" >tcp_..</text>
</g>
<g >
<title>WW::FreeList::empty (10,101,010 samples, 0.14%)</title><rect x="13.3" y="1189" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="16.26" y="1199.5" ></text>
</g>
<g >
<title>[[vdso]] (151,515,150 samples, 2.07%)</title><rect x="57.3" y="885" width="24.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="60.33" y="895.5" >[..</text>
</g>
<g >
<title>ip_rcv (656,565,650 samples, 8.99%)</title><rect x="184.6" y="565" width="106.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="187.63" y="575.5" >ip_rcv</text>
</g>
<g >
<title>void std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (10,101,010 samples, 0.14%)</title><rect x="137.3" y="1077" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="140.30" y="1087.5" ></text>
</g>
<g >
<title>kmem_cache_free (30,303,030 samples, 0.41%)</title><rect x="832.6" y="85" width="4.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="835.57" y="95.5" ></text>
</g>
<g >
<title>[[vdso]] (80,808,080 samples, 1.11%)</title><rect x="1039.8" y="1173" width="13.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1042.85" y="1183.5" ></text>
</g>
<g >
<title>x64_sys_call (10,101,010 samples, 0.14%)</title><rect x="775.4" y="773" width="1.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="778.45" y="783.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="165.0" y="965" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="168.05" y="975.5" ></text>
</g>
<g >
<title>WW::RaftRpcData::_InternalParse (10,101,010 samples, 0.14%)</title><rect x="356.0" y="1189" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="359.00" y="1199.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::is_void&lt;void&gt;, std::__is_invocable&lt;std::_Bind&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1125" width="491.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="455.30" y="1135.5" >std::enable_if&lt;std::__and_&lt;std::is_void&lt;void&gt;, std::__is_invocable&lt;..</text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="912.5" y="613" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="915.54" y="623.5" ></text>
</g>
<g >
<title>muduo::detail::startThread (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1189" width="491.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="455.30" y="1199.5" >muduo::detail::startThread</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,101,010 samples, 0.14%)</title><rect x="298.9" y="485" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="301.88" y="495.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (10,101,010 samples, 0.14%)</title><rect x="468.6" y="917" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="471.62" y="927.5" ></text>
</g>
<g >
<title>clock_nanosleep@GLIBC_2.2.5 (101,010,100 samples, 1.38%)</title><rect x="1052.9" y="1189" width="16.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1055.90" y="1199.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="137.3" y="1093" width="1.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="140.30" y="1103.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="932.1" y="933" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="935.13" y="943.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.28%)</title><rect x="1036.6" y="1189" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1039.58" y="1199.5" ></text>
</g>
<g >
<title>muduo::net::TcpConnection::send (1,262,626,250 samples, 17.29%)</title><rect x="138.9" y="1141" width="204.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="141.93" y="1151.5" >muduo::net::TcpConnection:..</text>
</g>
<g >
<title>skb_page_frag_refill (10,101,010 samples, 0.14%)</title><rect x="171.6" y="901" width="1.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="174.58" y="911.5" ></text>
</g>
<g >
<title>schedule (515,151,510 samples, 7.05%)</title><rect x="1100.2" y="1061" width="83.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1103.24" y="1071.5" >schedule</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_get_Node_allocator (10,101,010 samples, 0.14%)</title><rect x="19.8" y="885" width="1.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="22.79" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (313,131,310 samples, 4.29%)</title><rect x="401.7" y="1173" width="50.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="404.70" y="1183.5" >do_sy..</text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="723.2" y="789" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="726.22" y="799.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (10,101,010 samples, 0.14%)</title><rect x="272.8" y="437" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="275.77" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,202,020 samples, 0.28%)</title><rect x="401.7" y="1157" width="3.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="404.70" y="1167.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="723.2" y="773" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="726.22" y="783.5" ></text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="166.7" y="917" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="169.68" y="927.5" ></text>
</g>
<g >
<title>__sk_dst_check (10,101,010 samples, 0.14%)</title><rect x="813.0" y="485" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="815.99" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,101,010 samples, 0.14%)</title><rect x="298.9" y="453" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="301.88" y="463.5" ></text>
</g>
<g >
<title>WW::RaftRpcClientClosure&lt;WW::RaftRpcController, WW::AppendEntriesRequest, WW::AppendEntriesResponse&gt;::~RaftRpcClientClosure (1,989,898,970 samples, 27.25%)</title><rect x="31.2" y="1189" width="321.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="34.22" y="1199.5" >WW::RaftRpcClientClosure&lt;WW::RaftRpcControl..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (10,101,010 samples, 0.14%)</title><rect x="981.1" y="1029" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="984.09" y="1039.5" ></text>
</g>
<g >
<title>WW::AppendEntriesResponse::_InternalParse (10,101,010 samples, 0.14%)</title><rect x="11.6" y="1189" width="1.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="14.63" y="1199.5" ></text>
</g>
<g >
<title>neigh_hh_output (333,333,330 samples, 4.56%)</title><rect x="822.8" y="405" width="53.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="825.78" y="415.5" >neigh..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (313,131,310 samples, 4.29%)</title><rect x="401.7" y="1189" width="50.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="404.70" y="1199.5" >entry..</text>
</g>
<g >
<title>void std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1125" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1036.32" y="1135.5" ></text>
</g>
<g >
<title>handle_softirqs (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="949" width="3.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1183.21" y="959.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (10,101,010 samples, 0.14%)</title><rect x="875.0" y="373" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="878.01" y="383.5" ></text>
</g>
<g >
<title>skb_release_data (20,202,020 samples, 0.28%)</title><rect x="292.4" y="613" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="295.35" y="623.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (20,202,020 samples, 0.28%)</title><rect x="168.3" y="901" width="3.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="171.31" y="911.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (40,404,040 samples, 0.55%)</title><rect x="814.6" y="437" width="6.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="817.62" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,181,818,170 samples, 16.18%)</title><rect x="152.0" y="1061" width="190.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="154.99" y="1071.5" >do_syscall_64</text>
</g>
<g >
<title>__rcu_read_lock (10,101,010 samples, 0.14%)</title><rect x="829.3" y="197" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="832.31" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="298.9" y="677" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="301.88" y="687.5" ></text>
</g>
<g >
<title>muduo::net::EPollPoller::fillActiveChannels (20,202,020 samples, 0.28%)</title><rect x="933.8" y="981" width="3.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="936.76" y="991.5" ></text>
</g>
<g >
<title>sock_read_iter (686,868,680 samples, 9.41%)</title><rect x="801.6" y="677" width="110.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="804.56" y="687.5" >sock_read_iter</text>
</g>
<g >
<title>x64_sys_call (292,929,290 samples, 4.01%)</title><rect x="405.0" y="1157" width="47.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="407.97" y="1167.5" >x64_..</text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::UTF8GenericScanFastAscii (10,101,010 samples, 0.14%)</title><rect x="360.9" y="1157" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="363.90" y="1167.5" ></text>
</g>
<g >
<title>nf_conntrack_handle_packet (10,101,010 samples, 0.14%)</title><rect x="173.2" y="741" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="176.21" y="751.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::erase (50,505,050 samples, 0.69%)</title><rect x="18.2" y="981" width="8.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="21.16" y="991.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (666,666,660 samples, 9.13%)</title><rect x="804.8" y="613" width="107.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="807.83" y="623.5" >tcp_recvmsg_l..</text>
</g>
<g >
<title>skb_csum_hwoffload_help (10,101,010 samples, 0.14%)</title><rect x="300.5" y="693" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="303.51" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_write (313,131,310 samples, 4.29%)</title><rect x="982.7" y="1061" width="50.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="985.72" y="1071.5" >__x64..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="165.0" y="981" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="168.05" y="991.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (999,999,990 samples, 13.69%)</title><rect x="173.2" y="901" width="161.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="176.21" y="911.5" >__tcp_push_pending_f..</text>
</g>
<g >
<title>__do_softirq (20,202,020 samples, 0.28%)</title><rect x="168.3" y="869" width="3.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="171.31" y="879.5" ></text>
</g>
<g >
<title>update_blocked_averages (20,202,020 samples, 0.28%)</title><rect x="168.3" y="821" width="3.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="171.31" y="831.5" ></text>
</g>
<g >
<title>nf_hook_slow (40,404,040 samples, 0.55%)</title><rect x="814.6" y="453" width="6.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="817.62" y="463.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (10,101,010 samples, 0.14%)</title><rect x="804.8" y="597" width="1.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="807.83" y="607.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (989,898,980 samples, 13.55%)</title><rect x="754.2" y="901" width="160.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="757.23" y="911.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>__x64_sys_futex (292,929,290 samples, 4.01%)</title><rect x="405.0" y="1141" width="47.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="407.97" y="1151.5" >__x6..</text>
</g>
<g >
<title>__local_bh_enable_ip (10,101,010 samples, 0.14%)</title><rect x="302.1" y="725" width="1.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="305.14" y="735.5" ></text>
</g>
<g >
<title>__napi_poll (292,929,290 samples, 4.01%)</title><rect x="827.7" y="293" width="47.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="830.68" y="303.5" >__na..</text>
</g>
<g >
<title>futex_wait (525,252,520 samples, 7.19%)</title><rect x="1098.6" y="1109" width="84.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1101.60" y="1119.5" >futex_wait</text>
</g>
<g >
<title>schedule (10,101,010 samples, 0.14%)</title><rect x="981.1" y="1061" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="984.09" y="1071.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (10,101,010 samples, 0.14%)</title><rect x="917.4" y="981" width="1.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="920.44" y="991.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1109" width="491.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="455.30" y="1119.5" >void std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>std::_Bind&lt;void  (10,101,010 samples, 0.14%)</title><rect x="137.3" y="1045" width="1.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="140.30" y="1055.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::loop (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1013" width="491.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="455.30" y="1023.5" >muduo::net::EventLoop::loop</text>
</g>
<g >
<title>[unknown] (30,303,030 samples, 0.41%)</title><rect x="357.6" y="1173" width="4.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="360.63" y="1183.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::runInLoop (515,151,510 samples, 7.05%)</title><rect x="953.3" y="1173" width="83.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="956.35" y="1183.5" >muduo::ne..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1,313,131,300 samples, 17.98%)</title><rect x="478.4" y="885" width="212.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="481.41" y="895.5" >schedule_hrtimeout_range</text>
</g>
<g >
<title>tcp_v4_rcv (272,727,270 samples, 3.73%)</title><rect x="830.9" y="165" width="44.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="833.94" y="175.5" >tcp_..</text>
</g>
<g >
<title>tcp_ack (40,404,040 samples, 0.55%)</title><rect x="837.5" y="117" width="6.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="840.47" y="127.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::handleRead (131,313,130 samples, 1.80%)</title><rect x="755.9" y="837" width="21.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="758.86" y="847.5" ></text>
</g>
<g >
<title>__inet_lookup_established (10,101,010 samples, 0.14%)</title><rect x="184.6" y="469" width="1.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="187.63" y="479.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.14%)</title><rect x="364.2" y="1157" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="367.16" y="1167.5" ></text>
</g>
<g >
<title>do_timerfd_settime (191,919,190 samples, 2.63%)</title><rect x="98.1" y="853" width="31.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="101.13" y="863.5" >do..</text>
</g>
<g >
<title>[unknown] (1,989,898,970 samples, 27.25%)</title><rect x="31.2" y="1173" width="321.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="34.22" y="1183.5" >[unknown]</text>
</g>
<g >
<title>process_backlog (10,101,010 samples, 0.14%)</title><rect x="298.9" y="581" width="1.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="301.88" y="591.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (20,202,020 samples, 0.28%)</title><rect x="174.8" y="725" width="3.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="177.84" y="735.5" ></text>
</g>
<g >
<title>ip_rcv (282,828,280 samples, 3.87%)</title><rect x="829.3" y="229" width="45.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="832.31" y="239.5" >ip_rcv</text>
</g>
<g >
<title>__tcp_cleanup_rbuf (444,444,440 samples, 6.09%)</title><rect x="808.1" y="581" width="71.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="811.09" y="591.5" >__tcp_cl..</text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (80,808,080 samples, 1.11%)</title><rect x="1039.8" y="1189" width="13.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1042.85" y="1199.5" ></text>
</g>
<g >
<title>__nf_ct_refresh_acct (10,101,010 samples, 0.14%)</title><rect x="173.2" y="725" width="1.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="176.21" y="735.5" ></text>
</g>
<g >
<title>ip_local_out (828,282,820 samples, 11.34%)</title><rect x="173.2" y="821" width="133.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="176.21" y="831.5" >ip_local_out</text>
</g>
<g >
<title>__schedule (10,101,010 samples, 0.14%)</title><rect x="981.1" y="1045" width="1.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="984.09" y="1055.5" ></text>
</g>
<g >
<title>schedule (80,808,080 samples, 1.11%)</title><rect x="153.6" y="1029" width="13.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="156.62" y="1039.5" ></text>
</g>
<g >
<title>std::set&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::insert (30,303,030 samples, 0.41%)</title><rect x="52.4" y="917" width="4.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="55.43" y="927.5" ></text>
</g>
<g >
<title>x64_sys_call (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1157" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1186.47" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, muduo::net::Channel*&gt;, std::_Select1st&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt; &gt;::_S_key (10,101,010 samples, 0.14%)</title><rect x="935.4" y="917" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="938.39" y="927.5" ></text>
</g>
<g >
<title>__fdget_pos (10,101,010 samples, 0.14%)</title><rect x="799.9" y="709" width="1.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="802.93" y="719.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (10,101,010 samples, 0.14%)</title><rect x="1052.9" y="1125" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1055.90" y="1135.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1141" width="1.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1186.47" y="1151.5" ></text>
</g>
<g >
<title>x64_sys_call (10,101,010 samples, 0.14%)</title><rect x="1067.6" y="1157" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1070.59" y="1167.5" ></text>
</g>
<g >
<title>muduo::Timestamp::now (121,212,120 samples, 1.66%)</title><rect x="31.2" y="1125" width="19.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="34.22" y="1135.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="940.3" y="965" width="1.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="943.29" y="975.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (60,606,060 samples, 0.83%)</title><rect x="680.8" y="789" width="9.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="683.79" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_read (10,101,010 samples, 0.14%)</title><rect x="775.4" y="757" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="778.45" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (707,070,700 samples, 9.68%)</title><rect x="799.9" y="789" width="114.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="802.93" y="799.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="166.7" y="949" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="169.68" y="959.5" ></text>
</g>
<g >
<title>all (7,303,030,230 samples, 100%)</title><rect x="10.0" y="1237" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (202,020,200 samples, 2.77%)</title><rect x="879.9" y="581" width="32.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="882.90" y="591.5" >tc..</text>
</g>
<g >
<title>rseq_update_cpu_node_id (10,101,010 samples, 0.14%)</title><rect x="470.2" y="917" width="1.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="473.25" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (80,808,080 samples, 1.11%)</title><rect x="153.6" y="997" width="13.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="156.62" y="1007.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (10,101,010 samples, 0.14%)</title><rect x="465.4" y="965" width="1.6" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="468.35" y="975.5" ></text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="298.9" y="629" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="301.88" y="639.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (20,202,020 samples, 0.28%)</title><rect x="1185.1" y="1205" width="3.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1188.10" y="1215.5" ></text>
</g>
<g >
<title>tcp_v4_send_check (10,101,010 samples, 0.14%)</title><rect x="878.3" y="517" width="1.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="881.27" y="527.5" ></text>
</g>
<g >
<title>std::less&lt;int&gt;::operator (10,101,010 samples, 0.14%)</title><rect x="933.8" y="917" width="1.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="936.76" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (20,202,020 samples, 0.28%)</title><rect x="352.7" y="1157" width="3.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="355.74" y="1167.5" ></text>
</g>
<g >
<title>WW::RaftRpcChannel::CallMethod (1,929,292,910 samples, 26.42%)</title><rect x="31.2" y="1157" width="311.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="34.22" y="1167.5" >WW::RaftRpcChannel::CallMethod</text>
</g>
<g >
<title>__local_bh_enable_ip (717,171,710 samples, 9.82%)</title><rect x="183.0" y="709" width="115.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="186.00" y="719.5" >__local_bh_ena..</text>
</g>
<g >
<title>__sk_mem_reduce_allocated (20,202,020 samples, 0.28%)</title><rect x="839.1" y="69" width="3.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="842.10" y="79.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="165.0" y="885" width="1.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="168.05" y="895.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="166.7" y="981" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="169.68" y="991.5" ></text>
</g>
<g >
<title>_copy_from_user (10,101,010 samples, 0.14%)</title><rect x="129.1" y="837" width="1.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="132.14" y="847.5" ></text>
</g>
<g >
<title>__schedule (1,313,131,300 samples, 17.98%)</title><rect x="478.4" y="837" width="212.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="481.41" y="847.5" >__schedule</text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="165.0" y="917" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="168.05" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="981" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1183.21" y="991.5" ></text>
</g>
<g >
<title>schedule (20,202,020 samples, 0.28%)</title><rect x="401.7" y="1141" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="404.70" y="1151.5" ></text>
</g>
<g >
<title>muduo::net::TimerQueue::addTimer (545,454,540 samples, 7.47%)</title><rect x="50.8" y="1109" width="88.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="53.80" y="1119.5" >muduo::net..</text>
</g>
<g >
<title>[[vdso]] (121,212,120 samples, 1.66%)</title><rect x="31.2" y="1109" width="19.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="34.22" y="1119.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (10,101,010 samples, 0.14%)</title><rect x="465.4" y="933" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="468.35" y="943.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.14%)</title><rect x="1036.6" y="1173" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1039.58" y="1183.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="932.1" y="853" width="1.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="935.13" y="863.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (282,828,280 samples, 3.87%)</title><rect x="406.6" y="1061" width="45.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="409.60" y="1071.5" >_raw..</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="298.9" y="661" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="301.88" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="723.2" y="853" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="726.22" y="863.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::is_void&lt;void&gt;, std::__is_invocable&lt;std::_Bind&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1045" width="80.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="53.80" y="1055.5" >std::enab..</text>
</g>
<g >
<title>muduo::Timestamp&amp;&amp; std::forward&lt;muduo::Timestamp&gt; (10,101,010 samples, 0.14%)</title><rect x="754.2" y="869" width="1.7" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="757.23" y="879.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (333,333,330 samples, 4.56%)</title><rect x="979.5" y="1109" width="53.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="982.46" y="1119.5" >entry..</text>
</g>
<g >
<title>free@plt (10,101,010 samples, 0.14%)</title><rect x="342.9" y="1157" width="1.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="345.95" y="1167.5" ></text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="475.1" y="741" width="1.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="478.15" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_timerfd_settime (202,020,200 samples, 2.77%)</title><rect x="98.1" y="869" width="32.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="101.13" y="879.5" >__..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="723.2" y="837" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="726.22" y="847.5" ></text>
</g>
<g >
<title>muduo::net::TimerQueue::insert (40,404,040 samples, 0.55%)</title><rect x="50.8" y="933" width="6.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="53.80" y="943.5" ></text>
</g>
<g >
<title>__futex_wait (525,252,520 samples, 7.19%)</title><rect x="1098.6" y="1093" width="84.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1101.60" y="1103.5" >__futex_w..</text>
</g>
<g >
<title>__schedule (60,606,060 samples, 0.83%)</title><rect x="1057.8" y="1045" width="9.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1060.80" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_end (10,101,010 samples, 0.14%)</title><rect x="52.4" y="885" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="55.43" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node_base*&amp; std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (10,101,010 samples, 0.14%)</title><rect x="54.1" y="869" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="57.07" y="879.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (10,101,010 samples, 0.14%)</title><rect x="171.6" y="917" width="1.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="174.58" y="927.5" ></text>
</g>
<g >
<title>x64_sys_call (525,252,520 samples, 7.19%)</title><rect x="1098.6" y="1157" width="84.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1101.60" y="1167.5" >x64_sys_c..</text>
</g>
<g >
<title>ep_poll (1,565,656,550 samples, 21.44%)</title><rect x="471.9" y="901" width="253.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="474.88" y="911.5" >ep_poll</text>
</g>
<g >
<title>__kfree_skb (30,303,030 samples, 0.41%)</title><rect x="832.6" y="117" width="4.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="835.57" y="127.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::clear (10,101,010 samples, 0.14%)</title><rect x="19.8" y="933" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="22.79" y="943.5" ></text>
</g>
<g >
<title>google::protobuf::internal::(anonymous namespace)::UTF8GenericScanFastAscii (10,101,010 samples, 0.14%)</title><rect x="375.6" y="1189" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="378.59" y="1199.5" ></text>
</g>
<g >
<title>__x64_sys_write (10,101,010 samples, 0.14%)</title><rect x="979.5" y="1077" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="982.46" y="1087.5" ></text>
</g>
<g >
<title>muduo::net::Channel::handleEvent (999,999,990 samples, 13.69%)</title><rect x="754.2" y="997" width="161.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="757.23" y="1007.5" >muduo::net::Channel:..</text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1093" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1036.32" y="1103.5" ></text>
</g>
<g >
<title>sock_recvmsg (676,767,670 samples, 9.27%)</title><rect x="803.2" y="661" width="109.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="806.20" y="671.5" >sock_recvmsg</text>
</g>
<g >
<title>muduo::net::Timer::~Timer (10,101,010 samples, 0.14%)</title><rect x="14.9" y="981" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="17.90" y="991.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="475.1" y="773" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="478.15" y="783.5" ></text>
</g>
<g >
<title>__schedule (515,151,510 samples, 7.05%)</title><rect x="1100.2" y="1045" width="83.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1103.24" y="1055.5" >__schedule</text>
</g>
<g >
<title>tcp_v4_rcv (10,101,010 samples, 0.14%)</title><rect x="298.9" y="469" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="301.88" y="479.5" ></text>
</g>
<g >
<title>muduo::net::TcpConnection::sendInLoop (1,262,626,250 samples, 17.29%)</title><rect x="138.9" y="1125" width="204.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="141.93" y="1135.5" >muduo::net::TcpConnection:..</text>
</g>
<g >
<title>__ip_local_out (40,404,040 samples, 0.55%)</title><rect x="814.6" y="469" width="6.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="817.62" y="479.5" ></text>
</g>
<g >
<title>muduo::net::EPollPoller::poll (131,313,130 samples, 1.80%)</title><rect x="915.8" y="997" width="21.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="918.81" y="1007.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="475.1" y="757" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="478.15" y="767.5" ></text>
</g>
<g >
<title>__schedule (80,808,080 samples, 1.11%)</title><rect x="153.6" y="1013" width="13.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="156.62" y="1023.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="723.2" y="805" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="726.22" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (272,727,270 samples, 3.73%)</title><rect x="830.9" y="197" width="44.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="833.94" y="207.5" >ip_l..</text>
</g>
<g >
<title>ip_output (787,878,780 samples, 10.79%)</title><rect x="179.7" y="805" width="127.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="182.74" y="815.5" >ip_output</text>
</g>
<g >
<title>x64_sys_call (1,090,909,080 samples, 14.94%)</title><rect x="166.7" y="1045" width="176.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="169.68" y="1055.5" >x64_sys_call</text>
</g>
<g >
<title>malloc (30,303,030 samples, 0.41%)</title><rect x="383.7" y="1205" width="4.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="386.75" y="1215.5" ></text>
</g>
<g >
<title>try_to_wake_up (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1061" width="14.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1078.75" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (292,929,290 samples, 4.01%)</title><rect x="827.7" y="245" width="47.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="830.68" y="255.5" >__ne..</text>
</g>
<g >
<title>vm_mmap_pgoff (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1109" width="1.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1186.47" y="1119.5" ></text>
</g>
<g >
<title>std::function&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1077" width="80.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="53.80" y="1087.5" >std::func..</text>
</g>
<g >
<title>__GI___libc_write (1,242,424,230 samples, 17.01%)</title><rect x="142.2" y="1093" width="200.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="145.20" y="1103.5" >__GI___libc_write</text>
</g>
<g >
<title>nf_conntrack_in (30,303,030 samples, 0.41%)</title><rect x="173.2" y="757" width="4.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="176.21" y="767.5" ></text>
</g>
<g >
<title>muduo::net::TcpConnection::handleRead (848,484,840 samples, 11.62%)</title><rect x="777.1" y="837" width="137.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="780.08" y="847.5" >muduo::net::TcpCo..</text>
</g>
<g >
<title>__tcp_send_ack.part.0 (444,444,440 samples, 6.09%)</title><rect x="808.1" y="549" width="71.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="811.09" y="559.5" >__tcp_se..</text>
</g>
<g >
<title>void std::_Bind&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1045" width="16.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="17.90" y="1055.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (20,202,020 samples, 0.28%)</title><rect x="47.5" y="1077" width="3.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="50.54" y="1087.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,777,777,760 samples, 24.34%)</title><rect x="467.0" y="965" width="287.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="469.98" y="975.5" >do_syscall_64</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="965" width="80.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="53.80" y="975.5" >void std:..</text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_iterator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, bool&gt; std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; (30,303,030 samples, 0.41%)</title><rect x="52.4" y="901" width="4.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="55.43" y="911.5" ></text>
</g>
<g >
<title>read_tsc (191,919,190 samples, 2.63%)</title><rect x="844.0" y="101" width="31.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="847.00" y="111.5" >re..</text>
</g>
<g >
<title>muduo::Timestamp::now (90,909,090 samples, 1.24%)</title><rect x="919.1" y="981" width="14.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="922.07" y="991.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (656,565,650 samples, 8.99%)</title><rect x="184.6" y="501" width="106.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="187.63" y="511.5" >tcp_v4_rcv</text>
</g>
<g >
<title>update_blocked_averages (60,606,060 samples, 0.83%)</title><rect x="680.8" y="709" width="9.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="683.79" y="719.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (565,656,560 samples, 7.75%)</title><rect x="1092.1" y="1205" width="91.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1095.07" y="1215.5" >__GI___fut..</text>
</g>
<g >
<title>timerfd_settime (303,030,300 samples, 4.15%)</title><rect x="81.8" y="933" width="49.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="84.81" y="943.5" >time..</text>
</g>
<g >
<title>ip_queue_xmit (838,383,830 samples, 11.48%)</title><rect x="173.2" y="853" width="135.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="176.21" y="863.5" >ip_queue_xmit</text>
</g>
<g >
<title>muduo::detail::AtomicIntegerT&lt;long&gt;::addAndGet (10,101,010 samples, 0.14%)</title><rect x="130.8" y="1077" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="133.77" y="1087.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (505,050,500 samples, 6.92%)</title><rect x="1101.9" y="1029" width="81.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.87" y="1039.5" >finish_ta..</text>
</g>
<g >
<title>ip_rcv (10,101,010 samples, 0.14%)</title><rect x="298.9" y="533" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="301.88" y="543.5" ></text>
</g>
<g >
<title>muduo::net::TimerQueue::cancel (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1157" width="16.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="17.90" y="1167.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (20,202,020 samples, 0.28%)</title><rect x="809.7" y="501" width="3.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="812.72" y="511.5" ></text>
</g>
<g >
<title>__ip_finish_output (343,434,340 samples, 4.70%)</title><rect x="821.1" y="437" width="55.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="824.15" y="447.5" >__ip_..</text>
</g>
<g >
<title>__x64_sys_readv (707,070,700 samples, 9.68%)</title><rect x="799.9" y="741" width="114.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="802.93" y="751.5" >__x64_sys_readv</text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (80,808,080 samples, 1.11%)</title><rect x="1054.5" y="1125" width="13.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1057.54" y="1135.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (80,808,080 samples, 1.11%)</title><rect x="1054.5" y="1093" width="13.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1057.54" y="1103.5" ></text>
</g>
<g >
<title>WW::RaftRpcController::~RaftRpcController (20,202,020 samples, 0.28%)</title><rect x="352.7" y="1189" width="3.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="355.74" y="1199.5" ></text>
</g>
<g >
<title>inet_sendmsg (1,080,808,070 samples, 14.80%)</title><rect x="168.3" y="965" width="174.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="171.31" y="975.5" >inet_sendmsg</text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (30,303,030 samples, 0.41%)</title><rect x="953.3" y="1125" width="4.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="956.35" y="1135.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,777,777,760 samples, 24.34%)</title><rect x="467.0" y="981" width="287.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="469.98" y="991.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10,101,010 samples, 0.14%)</title><rect x="1090.4" y="1189" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1093.44" y="1199.5" ></text>
</g>
<g >
<title>__siphash_unaligned (10,101,010 samples, 0.14%)</title><rect x="819.5" y="389" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="822.52" y="399.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (30,303,030 samples, 0.41%)</title><rect x="839.1" y="101" width="4.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="842.10" y="111.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs (10,101,010 samples, 0.14%)</title><rect x="1052.9" y="1109" width="1.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1055.90" y="1119.5" ></text>
</g>
<g >
<title>vfs_read (10,101,010 samples, 0.14%)</title><rect x="775.4" y="725" width="1.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="778.45" y="735.5" ></text>
</g>
<g >
<title>[unknown] (20,202,020 samples, 0.28%)</title><rect x="352.7" y="1173" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="355.74" y="1183.5" ></text>
</g>
<g >
<title>ip_finish_output2 (767,676,760 samples, 10.51%)</title><rect x="179.7" y="757" width="124.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="182.74" y="767.5" >ip_finish_output2</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (272,727,270 samples, 3.73%)</title><rect x="830.9" y="181" width="44.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="833.94" y="191.5" >ip_p..</text>
</g>
<g >
<title>do_syscall_64 (333,333,330 samples, 4.56%)</title><rect x="979.5" y="1093" width="53.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="982.46" y="1103.5" >do_sy..</text>
</g>
<g >
<title>std::function&lt;void  (20,202,020 samples, 0.28%)</title><rect x="937.0" y="981" width="3.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="940.03" y="991.5" ></text>
</g>
<g >
<title>muduo::detail::AtomicIntegerT&lt;long&gt;::getAndAdd (10,101,010 samples, 0.14%)</title><rect x="132.4" y="1045" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="135.41" y="1055.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (656,565,650 samples, 8.99%)</title><rect x="184.6" y="517" width="106.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="187.63" y="527.5" >ip_protocol_..</text>
</g>
<g >
<title>tcp_push (999,999,990 samples, 13.69%)</title><rect x="173.2" y="917" width="161.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="176.21" y="927.5" >tcp_push</text>
</g>
<g >
<title>__inet_lookup_skb (10,101,010 samples, 0.14%)</title><rect x="184.6" y="485" width="1.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="187.63" y="495.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="912.5" y="645" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="915.54" y="655.5" ></text>
</g>
<g >
<title>futex_wake (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1093" width="14.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1078.75" y="1103.5" ></text>
</g>
<g >
<title>futex_wait_queue (515,151,510 samples, 7.05%)</title><rect x="1100.2" y="1077" width="83.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1103.24" y="1087.5" >futex_wai..</text>
</g>
<g >
<title>__alloc_skb (30,303,030 samples, 0.41%)</title><rect x="808.1" y="533" width="4.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="811.09" y="543.5" ></text>
</g>
<g >
<title>raft_example (1,515,151,500 samples, 20.75%)</title><rect x="945.2" y="1221" width="244.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="948.19" y="1231.5" >raft_example</text>
</g>
<g >
<title>WW::AppendEntriesRequest::~AppendEntriesRequest (10,101,010 samples, 0.14%)</title><rect x="362.5" y="1157" width="1.7" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="365.53" y="1167.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10,101,010 samples, 0.14%)</title><rect x="334.8" y="885" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="337.79" y="895.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (444,444,440 samples, 6.09%)</title><rect x="808.1" y="597" width="71.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="811.09" y="607.5" >tcp_clea..</text>
</g>
<g >
<title>std::shared_ptr&lt;void&gt;::shared_ptr (10,101,010 samples, 0.14%)</title><rect x="914.2" y="965" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="917.18" y="975.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (20,202,020 samples, 0.28%)</title><rect x="168.3" y="885" width="3.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="171.31" y="895.5" ></text>
</g>
<g >
<title>x64_sys_call (313,131,310 samples, 4.29%)</title><rect x="982.7" y="1077" width="50.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="985.72" y="1087.5" >x64_s..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="912.5" y="677" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="915.54" y="687.5" ></text>
</g>
<g >
<title>tcp_data_queue (535,353,530 samples, 7.33%)</title><rect x="187.9" y="453" width="86.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="190.90" y="463.5" >tcp_data_q..</text>
</g>
<g >
<title>validate_xmit_skb (10,101,010 samples, 0.14%)</title><rect x="300.5" y="709" width="1.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="303.51" y="719.5" ></text>
</g>
<g >
<title>__napi_poll (666,666,660 samples, 9.13%)</title><rect x="184.6" y="629" width="107.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="187.63" y="639.5" >__napi_poll</text>
</g>
<g >
<title>ip_rcv (10,101,010 samples, 0.14%)</title><rect x="290.7" y="581" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="293.72" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (535,353,530 samples, 7.33%)</title><rect x="1097.0" y="1189" width="86.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1099.97" y="1199.5" >entry_SYSC..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (20,202,020 samples, 0.28%)</title><rect x="168.3" y="917" width="3.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="171.31" y="927.5" ></text>
</g>
<g >
<title>neigh_hh_output (767,676,760 samples, 10.51%)</title><rect x="179.7" y="741" width="124.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="182.74" y="751.5" >neigh_hh_output</text>
</g>
<g >
<title>__schedule (20,202,020 samples, 0.28%)</title><rect x="401.7" y="1125" width="3.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="404.70" y="1135.5" ></text>
</g>
<g >
<title>handle_softirqs (10,101,010 samples, 0.14%)</title><rect x="49.2" y="965" width="1.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="52.17" y="975.5" ></text>
</g>
<g >
<title>muduo::detail::AtomicIntegerT&lt;long&gt;::addAndGet (10,101,010 samples, 0.14%)</title><rect x="132.4" y="1061" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="135.41" y="1071.5" ></text>
</g>
<g >
<title>sem_post@GLIBC_2.2.5 (383,838,380 samples, 5.26%)</title><rect x="390.3" y="1205" width="62.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="393.28" y="1215.5" >sem_po..</text>
</g>
<g >
<title>pthread_once@GLIBC_2.2.5 (10,101,010 samples, 0.14%)</title><rect x="380.5" y="1189" width="1.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="383.48" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (212,121,210 samples, 2.90%)</title><rect x="96.5" y="917" width="34.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="99.50" y="927.5" >en..</text>
</g>
<g >
<title>__ip_queue_xmit (404,040,400 samples, 5.53%)</title><rect x="813.0" y="501" width="65.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="815.99" y="511.5" >__ip_qu..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10,101,010 samples, 0.14%)</title><rect x="1035.0" y="1157" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1037.95" y="1167.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::runAfter (666,666,660 samples, 9.13%)</title><rect x="31.2" y="1141" width="107.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="34.22" y="1151.5" >muduo::net::E..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="49.2" y="1029" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="52.17" y="1039.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (20,202,020 samples, 0.28%)</title><rect x="839.1" y="53" width="3.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="842.10" y="63.5" ></text>
</g>
<g >
<title>muduo::net::Channel::isWriting (10,101,010 samples, 0.14%)</title><rect x="138.9" y="1109" width="1.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="141.93" y="1119.5" ></text>
</g>
<g >
<title>std::function&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1125" width="16.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="17.90" y="1135.5" ></text>
</g>
<g >
<title>x64_sys_call (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1141" width="14.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1078.75" y="1151.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="932.1" y="949" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="935.13" y="959.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (40,404,040 samples, 0.55%)</title><rect x="173.2" y="773" width="6.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="176.21" y="783.5" ></text>
</g>
<g >
<title>[unknown] (909,090,900 samples, 12.45%)</title><rect x="945.2" y="1205" width="146.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="948.19" y="1215.5" >[unknown]</text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="912.5" y="581" width="1.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="915.54" y="591.5" ></text>
</g>
<g >
<title>mod_memcg_state (20,202,020 samples, 0.28%)</title><rect x="839.1" y="37" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="842.10" y="47.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1029" width="80.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="53.80" y="1039.5" >void std:..</text>
</g>
<g >
<title>try_to_wake_up (282,828,280 samples, 3.87%)</title><rect x="406.6" y="1077" width="45.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="409.60" y="1087.5" >try_..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (979,797,970 samples, 13.42%)</title><rect x="755.9" y="853" width="158.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="758.86" y="863.5" >void std::__invoke_i..</text>
</g>
<g >
<title>irq_exit_rcu (60,606,060 samples, 0.83%)</title><rect x="680.8" y="773" width="9.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="683.79" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_futex (525,252,520 samples, 7.19%)</title><rect x="1098.6" y="1141" width="84.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1101.60" y="1151.5" >__x64_sys..</text>
</g>
<g >
<title>__local_bh_enable_ip (303,030,300 samples, 4.15%)</title><rect x="826.0" y="373" width="49.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="829.04" y="383.5" >__lo..</text>
</g>
<g >
<title>__ip_finish_output (767,676,760 samples, 10.51%)</title><rect x="179.7" y="773" width="124.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="182.74" y="783.5" >__ip_finish_out..</text>
</g>
<g >
<title>void std::_Bind&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1013" width="80.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="53.80" y="1023.5" >void std:..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, muduo::net::TimerQueue*, muduo::net::Timer*&gt;::_Tuple_impl (10,101,010 samples, 0.14%)</title><rect x="137.3" y="1029" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="140.30" y="1039.5" ></text>
</g>
<g >
<title>tcp_data_ready (10,101,010 samples, 0.14%)</title><rect x="298.9" y="405" width="1.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="301.88" y="415.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (10,101,010 samples, 0.14%)</title><rect x="186.3" y="453" width="1.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="189.27" y="463.5" ></text>
</g>
<g >
<title>release_sock (20,202,020 samples, 0.28%)</title><rect x="168.3" y="933" width="3.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="171.31" y="943.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (40,404,040 samples, 0.55%)</title><rect x="336.4" y="901" width="6.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="339.42" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1061" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1036.32" y="1071.5" ></text>
</g>
<g >
<title>nf_hook_slow (40,404,040 samples, 0.55%)</title><rect x="173.2" y="789" width="6.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="176.21" y="799.5" ></text>
</g>
<g >
<title>handle_softirqs (717,171,710 samples, 9.82%)</title><rect x="183.0" y="661" width="115.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="186.00" y="671.5" >handle_softirqs</text>
</g>
<g >
<title>do_syscall_64 (90,909,090 samples, 1.24%)</title><rect x="1052.9" y="1157" width="14.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1055.90" y="1167.5" ></text>
</g>
<g >
<title>muduo::detail::ThreadData::runInThread (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1173" width="491.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="455.30" y="1183.5" >muduo::detail::ThreadData::runInThread</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (20,202,020 samples, 0.28%)</title><rect x="47.5" y="1045" width="3.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="50.54" y="1055.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (80,808,080 samples, 1.11%)</title><rect x="153.6" y="1045" width="13.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="156.62" y="1055.5" ></text>
</g>
<g >
<title>WW::RaftChannel::pop (40,404,040 samples, 0.55%)</title><rect x="946.8" y="1189" width="6.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="949.82" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::ParseFromString (10,101,010 samples, 0.14%)</title><rect x="374.0" y="1189" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="376.96" y="1199.5" ></text>
</g>
<g >
<title>WW::AppendEntriesResponse::Clear (10,101,010 samples, 0.14%)</title><rect x="10.0" y="1189" width="1.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>google::protobuf::Closure::~Closure (10,101,010 samples, 0.14%)</title><rect x="344.6" y="1157" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="347.58" y="1167.5" ></text>
</g>
<g >
<title>__do_softirq (303,030,300 samples, 4.15%)</title><rect x="826.0" y="341" width="49.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="829.04" y="351.5" >__do..</text>
</g>
<g >
<title>RaftRpcThreadPo (5,787,878,730 samples, 79.25%)</title><rect x="10.0" y="1221" width="935.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" >RaftRpcThreadPo</text>
</g>
<g >
<title>sock_def_readable (10,101,010 samples, 0.14%)</title><rect x="298.9" y="389" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="301.88" y="399.5" ></text>
</g>
<g >
<title>tcp_in_window (10,101,010 samples, 0.14%)</title><rect x="817.9" y="373" width="1.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="820.88" y="383.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1077" width="491.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="455.30" y="1087.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>tcp_sendmsg_locked (1,060,606,050 samples, 14.52%)</title><rect x="171.6" y="933" width="171.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="174.58" y="943.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>muduo::net::EventLoop::cancel (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1173" width="16.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="17.90" y="1183.5" ></text>
</g>
<g >
<title>mmap_region (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1077" width="1.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1186.47" y="1087.5" ></text>
</g>
<g >
<title>muduo::net::TcpConnection::sendInLoop (1,252,525,240 samples, 17.15%)</title><rect x="140.6" y="1109" width="202.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="143.57" y="1119.5" >muduo::net::TcpConnection:..</text>
</g>
<g >
<title>asm_sysvec_call_function_single (10,101,010 samples, 0.14%)</title><rect x="465.4" y="981" width="1.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="468.35" y="991.5" ></text>
</g>
<g >
<title>sock_rfree (10,101,010 samples, 0.14%)</title><rect x="806.5" y="597" width="1.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="809.46" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10,101,010 samples, 0.14%)</title><rect x="943.6" y="1205" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="946.55" y="1215.5" ></text>
</g>
<g >
<title>napi_consume_skb (20,202,020 samples, 0.28%)</title><rect x="292.4" y="629" width="3.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="295.35" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb (666,666,660 samples, 9.13%)</title><rect x="184.6" y="597" width="107.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="187.63" y="607.5" >__netif_recei..</text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Destroy (10,101,010 samples, 0.14%)</title><rect x="377.2" y="1189" width="1.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="380.22" y="1199.5" ></text>
</g>
<g >
<title>_int_free (10,101,010 samples, 0.14%)</title><rect x="382.1" y="1205" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="385.12" y="1215.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::erase (50,505,050 samples, 0.69%)</title><rect x="18.2" y="965" width="8.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="21.16" y="975.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="166.7" y="901" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="169.68" y="911.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10,101,010 samples, 0.14%)</title><rect x="14.9" y="965" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="17.90" y="975.5" ></text>
</g>
<g >
<title>sem_post@GLIBC_2.2.5 (131,313,130 samples, 1.80%)</title><rect x="1069.2" y="1189" width="21.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1072.23" y="1199.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="723.2" y="757" width="1.7" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="726.22" y="767.5" ></text>
</g>
<g >
<title>x64_sys_call (707,070,700 samples, 9.68%)</title><rect x="799.9" y="757" width="114.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="802.93" y="767.5" >x64_sys_call</text>
</g>
<g >
<title>finish_task_switch.isra.0 (20,202,020 samples, 0.28%)</title><rect x="473.5" y="821" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="476.51" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,101,010 samples, 0.14%)</title><rect x="298.9" y="357" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="301.88" y="367.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1077" width="16.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="17.90" y="1087.5" ></text>
</g>
<g >
<title>epoll_wait (1,868,686,850 samples, 25.59%)</title><rect x="452.3" y="997" width="301.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="455.30" y="1007.5" >epoll_wait</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="997" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1183.21" y="1007.5" ></text>
</g>
<g >
<title>google::protobuf::(anonymous namespace)::ValidateSymbolName (10,101,010 samples, 0.14%)</title><rect x="1036.6" y="1157" width="1.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1039.58" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (656,565,650 samples, 8.99%)</title><rect x="184.6" y="581" width="106.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="187.63" y="591.5" >__netif_rece..</text>
</g>
<g >
<title>__ip_local_out (40,404,040 samples, 0.55%)</title><rect x="173.2" y="805" width="6.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="176.21" y="815.5" ></text>
</g>
<g >
<title>muduo::detail::AtomicIntegerT&lt;long&gt;::incrementAndGet (10,101,010 samples, 0.14%)</title><rect x="132.4" y="1077" width="1.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="135.41" y="1087.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (525,252,520 samples, 7.19%)</title><rect x="187.9" y="405" width="84.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="190.90" y="415.5" >__wake_up..</text>
</g>
<g >
<title>do_mmap (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1093" width="1.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.47" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (1,747,474,730 samples, 23.93%)</title><rect x="471.9" y="933" width="282.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="474.88" y="943.5" >__x64_sys_epoll_wait</text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;::_M_valptr (10,101,010 samples, 0.14%)</title><rect x="935.4" y="901" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="938.39" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (656,565,650 samples, 8.99%)</title><rect x="184.6" y="533" width="106.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="187.63" y="543.5" >ip_local_del..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1189" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1186.47" y="1199.5" ></text>
</g>
<g >
<title>nf_hook_slow (10,101,010 samples, 0.14%)</title><rect x="876.6" y="453" width="1.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="879.64" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, muduo::net::Channel*&gt;, std::_Select1st&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt; &gt;::find (20,202,020 samples, 0.28%)</title><rect x="933.8" y="949" width="3.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="936.76" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,313,131,300 samples, 17.98%)</title><rect x="478.4" y="821" width="212.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="481.41" y="831.5" >finish_task_switch.isra.0</text>
</g>
<g >
<title>rw_verify_area (10,101,010 samples, 0.14%)</title><rect x="912.5" y="693" width="1.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="915.54" y="703.5" ></text>
</g>
<g >
<title>nf_confirm (10,101,010 samples, 0.14%)</title><rect x="876.6" y="437" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="879.64" y="447.5" ></text>
</g>
<g >
<title>schedule (60,606,060 samples, 0.83%)</title><rect x="1057.8" y="1061" width="9.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1060.80" y="1071.5" ></text>
</g>
<g >
<title>muduo::net::Buffer::readFd (838,383,830 samples, 11.48%)</title><rect x="778.7" y="821" width="135.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="781.71" y="831.5" >muduo::net::Buffe..</text>
</g>
<g >
<title>ksys_write (1,090,909,080 samples, 14.94%)</title><rect x="166.7" y="1013" width="176.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="169.68" y="1023.5" >ksys_write</text>
</g>
<g >
<title>run_rebalance_domains (20,202,020 samples, 0.28%)</title><rect x="168.3" y="837" width="3.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="171.31" y="847.5" ></text>
</g>
<g >
<title>std::function&lt;void  (989,898,980 samples, 13.55%)</title><rect x="754.2" y="965" width="160.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="757.23" y="975.5" >std::function&lt;void </text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="1033.3" y="1077" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1036.32" y="1087.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (191,919,190 samples, 2.63%)</title><rect x="844.0" y="117" width="31.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="847.00" y="127.5" >tc..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="912.5" y="661" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="915.54" y="671.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="298.9" y="693" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="301.88" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1157" width="491.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="455.30" y="1167.5" >std::function&lt;void </text>
</g>
<g >
<title>run_rebalance_domains (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="933" width="3.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1183.21" y="943.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (20,202,020 samples, 0.28%)</title><rect x="839.1" y="85" width="3.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="842.10" y="95.5" ></text>
</g>
<g >
<title>WW::RaftRpcData::_InternalSerialize (10,101,010 samples, 0.14%)</title><rect x="357.6" y="1157" width="1.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="360.63" y="1167.5" ></text>
</g>
<g >
<title>rw_verify_area (10,101,010 samples, 0.14%)</title><rect x="1031.7" y="1013" width="1.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1034.69" y="1023.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::doPendingFunctors (30,303,030 samples, 0.41%)</title><rect x="937.0" y="997" width="4.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="940.03" y="1007.5" ></text>
</g>
<g >
<title>WW::RaftRpcClient::AppendEntries (515,151,510 samples, 7.05%)</title><rect x="953.3" y="1189" width="83.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="956.35" y="1199.5" >WW::RaftR..</text>
</g>
<g >
<title>[unknown] (2,303,030,280 samples, 31.54%)</title><rect x="10.0" y="1205" width="372.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >[unknown]</text>
</g>
<g >
<title>ip_output (10,101,010 samples, 0.14%)</title><rect x="307.0" y="821" width="1.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="310.04" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (525,252,520 samples, 7.19%)</title><rect x="187.9" y="389" width="84.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="190.90" y="399.5" >_raw_spin..</text>
</g>
<g >
<title>do_syscall_64 (212,121,210 samples, 2.90%)</title><rect x="96.5" y="901" width="34.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="99.50" y="911.5" >do..</text>
</g>
<g >
<title>tcp_sendmsg (1,080,808,070 samples, 14.80%)</title><rect x="168.3" y="949" width="174.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="171.31" y="959.5" >tcp_sendmsg</text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="165.0" y="933" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="168.05" y="943.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (20,202,020 samples, 0.28%)</title><rect x="1054.5" y="1061" width="3.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1057.54" y="1071.5" ></text>
</g>
<g >
<title>std::pair&lt;muduo::net::Timer*, long&gt;::pair&lt;muduo::net::Timer*&amp;, long&amp;, true&gt; (10,101,010 samples, 0.14%)</title><rect x="16.5" y="981" width="1.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="19.53" y="991.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (212,121,210 samples, 2.90%)</title><rect x="690.6" y="885" width="34.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="693.58" y="895.5" >se..</text>
</g>
<g >
<title>__tls_get_addr (10,101,010 samples, 0.14%)</title><rect x="370.7" y="1189" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="373.69" y="1199.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (10,101,010 samples, 0.14%)</title><rect x="803.2" y="613" width="1.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="806.20" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_skmem (10,101,010 samples, 0.14%)</title><rect x="806.5" y="565" width="1.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="809.46" y="575.5" ></text>
</g>
<g >
<title>ksys_write (313,131,310 samples, 4.29%)</title><rect x="982.7" y="1045" width="50.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="985.72" y="1055.5" >ksys_..</text>
</g>
<g >
<title>tcp_ack_update_rtt (10,101,010 samples, 0.14%)</title><rect x="842.4" y="85" width="1.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="845.37" y="95.5" ></text>
</g>
<g >
<title>ip_local_out (393,939,390 samples, 5.39%)</title><rect x="814.6" y="485" width="63.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="817.62" y="495.5" >ip_loc..</text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.14%)</title><rect x="349.5" y="1157" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="352.47" y="1167.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::equal_range (30,303,030 samples, 0.41%)</title><rect x="21.4" y="949" width="4.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="24.42" y="959.5" ></text>
</g>
<g >
<title>kfree_skbmem (30,303,030 samples, 0.41%)</title><rect x="832.6" y="101" width="4.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="835.57" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (60,606,060 samples, 0.83%)</title><rect x="680.8" y="805" width="9.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="683.79" y="815.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (40,404,040 samples, 0.55%)</title><rect x="336.4" y="885" width="6.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="339.42" y="895.5" ></text>
</g>
<g >
<title>irqentry_exit (10,101,010 samples, 0.14%)</title><rect x="465.4" y="949" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="468.35" y="959.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (292,929,290 samples, 4.01%)</title><rect x="984.4" y="997" width="47.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="987.36" y="1007.5" >_raw..</text>
</g>
<g >
<title>muduo::net::EventLoop::wakeup (464,646,460 samples, 6.36%)</title><rect x="958.2" y="1141" width="75.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="961.24" y="1151.5" >muduo::n..</text>
</g>
<g >
<title>handle_softirqs (20,202,020 samples, 0.28%)</title><rect x="168.3" y="853" width="3.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="171.31" y="863.5" ></text>
</g>
<g >
<title>inet_recvmsg (676,767,670 samples, 9.27%)</title><rect x="803.2" y="645" width="109.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="806.20" y="655.5" >inet_recvmsg</text>
</g>
<g >
<title>__netif_receive_skb (10,101,010 samples, 0.14%)</title><rect x="298.9" y="565" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="301.88" y="575.5" ></text>
</g>
<g >
<title>ip_finish_output2 (343,434,340 samples, 4.70%)</title><rect x="821.1" y="421" width="55.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="824.15" y="431.5" >ip_fi..</text>
</g>
<g >
<title>muduo::net::TimerQueue::addTimerInLoop (494,949,490 samples, 6.78%)</title><rect x="50.8" y="949" width="80.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="53.80" y="959.5" >muduo::ne..</text>
</g>
<g >
<title>void std::_Bind&lt;void  (979,797,970 samples, 13.42%)</title><rect x="755.9" y="885" width="158.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="758.86" y="895.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>std::shared_ptr&lt;void&gt;::~shared_ptr (10,101,010 samples, 0.14%)</title><rect x="941.9" y="997" width="1.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="944.92" y="1007.5" ></text>
</g>
<g >
<title>vfs_write (1,090,909,080 samples, 14.94%)</title><rect x="166.7" y="997" width="176.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="169.68" y="1007.5" >vfs_write</text>
</g>
<g >
<title>do_nanosleep (80,808,080 samples, 1.11%)</title><rect x="1054.5" y="1077" width="13.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1057.54" y="1087.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,101,010 samples, 0.14%)</title><rect x="981.1" y="1077" width="1.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="984.09" y="1087.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (20,202,020 samples, 0.28%)</title><rect x="834.2" y="69" width="3.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="837.20" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1173" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1186.47" y="1183.5" ></text>
</g>
<g >
<title>nf_conntrack_in (40,404,040 samples, 0.55%)</title><rect x="814.6" y="421" width="6.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="817.62" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_drop_node (10,101,010 samples, 0.14%)</title><rect x="19.8" y="901" width="1.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="22.79" y="911.5" ></text>
</g>
<g >
<title>x64_sys_call (1,747,474,730 samples, 23.93%)</title><rect x="471.9" y="949" width="282.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="474.88" y="959.5" >x64_sys_call</text>
</g>
<g >
<title>muduo::net::Timer::Timer (20,202,020 samples, 0.28%)</title><rect x="130.8" y="1093" width="3.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="133.77" y="1103.5" ></text>
</g>
<g >
<title>resolve_normal_ct (20,202,020 samples, 0.28%)</title><rect x="174.8" y="741" width="3.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="177.84" y="751.5" ></text>
</g>
<g >
<title>net_rx_action (292,929,290 samples, 4.01%)</title><rect x="827.7" y="309" width="47.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="830.68" y="319.5" >net_..</text>
</g>
<g >
<title>std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;::operator (10,101,010 samples, 0.14%)</title><rect x="21.4" y="933" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="24.42" y="943.5" ></text>
</g>
<g >
<title>std::tuple&lt;muduo::Timestamp&amp;&amp;&gt; std::forward_as_tuple&lt;muduo::Timestamp&gt; (10,101,010 samples, 0.14%)</title><rect x="754.2" y="885" width="1.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="757.23" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (999,999,990 samples, 13.69%)</title><rect x="173.2" y="885" width="161.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="176.21" y="895.5" >tcp_write_xmit</text>
</g>
<g >
<title>__sock_wfree (10,101,010 samples, 0.14%)</title><rect x="875.0" y="357" width="1.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="878.01" y="367.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (202,020,200 samples, 2.77%)</title><rect x="879.9" y="597" width="32.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="882.90" y="607.5" >tc..</text>
</g>
<g >
<title>refill_stock (10,101,010 samples, 0.14%)</title><rect x="806.5" y="549" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="809.46" y="559.5" ></text>
</g>
<g >
<title>ep_send_events (20,202,020 samples, 0.28%)</title><rect x="473.5" y="885" width="3.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="476.51" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111,111,110 samples, 1.52%)</title><rect x="1072.5" y="1173" width="17.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1075.49" y="1183.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="49.2" y="981" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="52.17" y="991.5" ></text>
</g>
<g >
<title>read_tsc (161,616,160 samples, 2.21%)</title><rect x="728.1" y="917" width="26.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="731.12" y="927.5" >r..</text>
</g>
<g >
<title>read_tsc (202,020,200 samples, 2.77%)</title><rect x="879.9" y="565" width="32.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="882.90" y="575.5" >re..</text>
</g>
<g >
<title>std::__invoke_result&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="981" width="80.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="53.80" y="991.5" >std::__in..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_S_right (10,101,010 samples, 0.14%)</title><rect x="23.1" y="933" width="1.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="26.06" y="943.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="965" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1183.21" y="975.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (60,606,060 samples, 0.83%)</title><rect x="1057.8" y="1029" width="9.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1060.80" y="1039.5" ></text>
</g>
<g >
<title>x64_sys_call (212,121,210 samples, 2.90%)</title><rect x="96.5" y="885" width="34.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="99.50" y="895.5" >x6..</text>
</g>
<g >
<title>tcp_rcv_established (10,101,010 samples, 0.14%)</title><rect x="298.9" y="437" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="301.88" y="447.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,101,010 samples, 0.14%)</title><rect x="298.9" y="501" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="301.88" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="1013" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1183.21" y="1023.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (20,202,020 samples, 0.28%)</title><rect x="468.6" y="933" width="3.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="471.62" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output (343,434,340 samples, 4.70%)</title><rect x="821.1" y="453" width="55.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="824.15" y="463.5" >ip_fi..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,101,010 samples, 0.14%)</title><rect x="298.9" y="549" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="301.88" y="559.5" ></text>
</g>
<g >
<title>WW::Raft::_SendAppendEntries (10,101,010 samples, 0.14%)</title><rect x="945.2" y="1189" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="948.19" y="1199.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="298.9" y="645" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="301.88" y="655.5" ></text>
</g>
<g >
<title>do_futex (525,252,520 samples, 7.19%)</title><rect x="1098.6" y="1125" width="84.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1101.60" y="1135.5" >do_futex</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;, std::_Identity&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::less&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt; &gt;::_M_erase (10,101,010 samples, 0.14%)</title><rect x="19.8" y="917" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="22.79" y="927.5" ></text>
</g>
<g >
<title>operator new (10,101,010 samples, 0.14%)</title><rect x="388.6" y="1205" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="391.64" y="1215.5" ></text>
</g>
<g >
<title>muduo::net::detail::howMuchTimeFromNow (151,515,150 samples, 2.07%)</title><rect x="57.3" y="917" width="24.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="60.33" y="927.5" >m..</text>
</g>
<g >
<title>read_tsc (101,010,100 samples, 1.38%)</title><rect x="274.4" y="437" width="16.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="277.40" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (20,202,020 samples, 0.28%)</title><rect x="473.5" y="853" width="3.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="476.51" y="863.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10,101,010 samples, 0.14%)</title><rect x="135.7" y="1093" width="1.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="138.67" y="1103.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;*&amp; std::forward&lt;std::_Rb_tree_node&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;*&amp;&gt; (10,101,010 samples, 0.14%)</title><rect x="55.7" y="853" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="58.70" y="863.5" ></text>
</g>
<g >
<title>WW::RaftRpcChannel::_OnMessage (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1189" width="16.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="17.90" y="1199.5" ></text>
</g>
<g >
<title>common_nsleep (80,808,080 samples, 1.11%)</title><rect x="1054.5" y="1109" width="13.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1057.54" y="1119.5" ></text>
</g>
<g >
<title>muduo::net::detail::resetTimerfd (151,515,150 samples, 2.07%)</title><rect x="57.3" y="933" width="24.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="60.33" y="943.5" >m..</text>
</g>
<g >
<title>handle_softirqs (303,030,300 samples, 4.15%)</title><rect x="826.0" y="325" width="49.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="829.04" y="335.5" >hand..</text>
</g>
<g >
<title>do_syscall_64 (707,070,700 samples, 9.68%)</title><rect x="799.9" y="773" width="114.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="802.93" y="783.5" >do_syscall_64</text>
</g>
<g >
<title>tcp_mstamp_refresh (101,010,100 samples, 1.38%)</title><rect x="274.4" y="453" width="16.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="277.40" y="463.5" ></text>
</g>
<g >
<title>ip_output (353,535,350 samples, 4.84%)</title><rect x="821.1" y="469" width="57.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="824.15" y="479.5" >ip_out..</text>
</g>
<g >
<title>update_blocked_averages (20,202,020 samples, 0.28%)</title><rect x="1180.2" y="917" width="3.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1183.21" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;::_Rb_tree_iterator (10,101,010 samples, 0.14%)</title><rect x="28.0" y="949" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="30.95" y="959.5" ></text>
</g>
<g >
<title>std::map&lt;int, muduo::net::Channel*, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt; &gt;::find (20,202,020 samples, 0.28%)</title><rect x="933.8" y="965" width="3.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="936.76" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (535,353,530 samples, 7.33%)</title><rect x="1097.0" y="1173" width="86.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1099.97" y="1183.5" >do_syscall..</text>
</g>
<g >
<title>WW::RaftRpcData::~RaftRpcData (30,303,030 samples, 0.41%)</title><rect x="357.6" y="1189" width="4.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="360.63" y="1199.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (10,101,010 samples, 0.14%)</title><rect x="826.0" y="309" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="829.04" y="319.5" ></text>
</g>
<g >
<title>mutex_lock (20,202,020 samples, 0.28%)</title><rect x="473.5" y="869" width="3.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="476.51" y="879.5" ></text>
</g>
<g >
<title>google::protobuf::MessageLite::SerializeToString (10,101,010 samples, 0.14%)</title><rect x="365.8" y="1173" width="1.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="368.80" y="1183.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="475.1" y="789" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="478.15" y="799.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (10,101,010 samples, 0.14%)</title><rect x="806.5" y="581" width="1.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="809.46" y="591.5" ></text>
</g>
<g >
<title>resolve_normal_ct (10,101,010 samples, 0.14%)</title><rect x="178.1" y="757" width="1.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="181.11" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101,010,100 samples, 1.38%)</title><rect x="1052.9" y="1173" width="16.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1055.90" y="1183.5" ></text>
</g>
<g >
<title>fput (10,101,010 samples, 0.14%)</title><rect x="726.5" y="917" width="1.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="729.49" y="927.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="475.1" y="805" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="478.15" y="815.5" ></text>
</g>
<g >
<title>muduo::net::EventLoop::runInLoop (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1141" width="16.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="17.90" y="1151.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="165.0" y="901" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="168.05" y="911.5" ></text>
</g>
<g >
<title>std::weak_ptr&lt;void&gt;::lock (10,101,010 samples, 0.14%)</title><rect x="914.2" y="981" width="1.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="917.18" y="991.5" ></text>
</g>
<g >
<title>read_tsc (212,121,210 samples, 2.90%)</title><rect x="690.6" y="869" width="34.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="693.58" y="879.5" >re..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="49.2" y="1013" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.17" y="1023.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,101,010 samples, 0.14%)</title><rect x="166.7" y="965" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="169.68" y="975.5" ></text>
</g>
<g >
<title>google::protobuf::internal::ArenaStringPtr::Set (20,202,020 samples, 0.28%)</title><rect x="367.4" y="1173" width="3.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="370.43" y="1183.5" ></text>
</g>
<g >
<title>tcp_rcv_established (636,363,630 samples, 8.71%)</title><rect x="187.9" y="469" width="102.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="190.90" y="479.5" >tcp_rcv_esta..</text>
</g>
<g >
<title>tcp_rcv_established (272,727,270 samples, 3.73%)</title><rect x="830.9" y="133" width="44.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="833.94" y="143.5" >tcp_..</text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="475.1" y="725" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="478.15" y="735.5" ></text>
</g>
<g >
<title>operator delete (10,101,010 samples, 0.14%)</title><rect x="347.8" y="1157" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="350.84" y="1167.5" ></text>
</g>
<g >
<title>std::operator!= (10,101,010 samples, 0.14%)</title><rect x="29.6" y="997" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="32.59" y="1007.5" ></text>
</g>
<g >
<title>wake_up_q (282,828,280 samples, 3.87%)</title><rect x="406.6" y="1093" width="45.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="409.60" y="1103.5" >wake..</text>
</g>
<g >
<title>void std::_Bind&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1093" width="491.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="455.30" y="1103.5" >void std::_Bind&lt;void </text>
</g>
<g >
<title>std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt;::pair&lt;muduo::Timestamp&amp;, muduo::net::Timer*&amp;, true&gt; (10,101,010 samples, 0.14%)</title><rect x="50.8" y="917" width="1.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="53.80" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1061" width="80.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="53.80" y="1071.5" >std::_Fun..</text>
</g>
<g >
<title>nf_ct_acct_add (10,101,010 samples, 0.14%)</title><rect x="816.3" y="373" width="1.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="819.25" y="383.5" ></text>
</g>
<g >
<title>tcp_send_ack (444,444,440 samples, 6.09%)</title><rect x="808.1" y="565" width="71.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="811.09" y="575.5" >tcp_send..</text>
</g>
<g >
<title>schedule_hrtimeout_range (10,101,010 samples, 0.14%)</title><rect x="724.9" y="901" width="1.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="727.85" y="911.5" ></text>
</g>
<g >
<title>sock_write_iter (1,080,808,070 samples, 14.80%)</title><rect x="168.3" y="981" width="174.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="171.31" y="991.5" >sock_write_iter</text>
</g>
<g >
<title>__get_user_8 (10,101,010 samples, 0.14%)</title><rect x="468.6" y="901" width="1.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="471.62" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10,101,010 samples, 0.14%)</title><rect x="351.1" y="1157" width="1.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="354.11" y="1167.5" ></text>
</g>
<g >
<title>handle_softirqs (60,606,060 samples, 0.83%)</title><rect x="680.8" y="741" width="9.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="683.79" y="751.5" ></text>
</g>
<g >
<title>do_futex (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1109" width="14.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1078.75" y="1119.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (191,919,190 samples, 2.63%)</title><rect x="98.1" y="837" width="31.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="101.13" y="847.5" >_r..</text>
</g>
<g >
<title>__schedule (20,202,020 samples, 0.28%)</title><rect x="473.5" y="837" width="3.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="476.51" y="847.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (10,101,010 samples, 0.14%)</title><rect x="359.3" y="1157" width="1.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="362.27" y="1167.5" ></text>
</g>
<g >
<title>do_readv (707,070,700 samples, 9.68%)</title><rect x="799.9" y="725" width="114.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="802.93" y="735.5" >do_readv</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::net::Timer*, long&gt;, std::pair&lt;muduo::net::Timer*, long&gt;, std::_Identity&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::less&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt; &gt;::_M_mbegin (10,101,010 samples, 0.14%)</title><rect x="26.3" y="933" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="29.32" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;::_M_ptr (10,101,010 samples, 0.14%)</title><rect x="935.4" y="885" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="938.39" y="895.5" ></text>
</g>
<g >
<title>muduo::net::EventLoopThread::threadFunc (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1029" width="491.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="455.30" y="1039.5" >muduo::net::EventLoopThread::threadFunc</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, std::_Bind&lt;void  (989,898,980 samples, 13.55%)</title><rect x="754.2" y="917" width="160.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="757.23" y="927.5" >void std::__invoke_i..</text>
</g>
<g >
<title>__mmap (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1205" width="1.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1186.47" y="1215.5" ></text>
</g>
<g >
<title>refill_stock (10,101,010 samples, 0.14%)</title><rect x="341.3" y="853" width="1.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="344.31" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;muduo::net::Timer*, long&gt;, std::pair&lt;muduo::net::Timer*, long&gt;, std::_Identity&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::less&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt; &gt;::find (20,202,020 samples, 0.28%)</title><rect x="26.3" y="965" width="3.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="29.32" y="975.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1061" width="16.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="17.90" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,101,010 samples, 0.14%)</title><rect x="775.4" y="805" width="1.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="778.45" y="815.5" ></text>
</g>
<g >
<title>vma_expand (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1045" width="1.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1186.47" y="1055.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, muduo::net::Channel*&gt;, std::_Select1st&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt; &gt;::_S_key (10,101,010 samples, 0.14%)</title><rect x="935.4" y="933" width="1.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="938.39" y="943.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1013" width="16.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="17.90" y="1023.5" ></text>
</g>
<g >
<title>[[vdso]] (10,101,010 samples, 0.14%)</title><rect x="915.8" y="981" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="918.81" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::function&lt;void  (10,101,010 samples, 0.14%)</title><rect x="940.3" y="981" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="943.29" y="991.5" ></text>
</g>
<g >
<title>x64_sys_call (80,808,080 samples, 1.11%)</title><rect x="1054.5" y="1141" width="13.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1057.54" y="1151.5" ></text>
</g>
<g >
<title>kmalloc_reserve (20,202,020 samples, 0.28%)</title><rect x="809.7" y="517" width="3.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="812.72" y="527.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::is_void&lt;void&gt;, std::__is_invocable&lt;std::_Bind&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1093" width="16.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="17.90" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (111,111,110 samples, 1.52%)</title><rect x="1072.5" y="1157" width="17.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1075.49" y="1167.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1061" width="491.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="455.30" y="1071.5" >std::__invoke_result&lt;void </text>
</g>
<g >
<title>ip_local_deliver (10,101,010 samples, 0.14%)</title><rect x="298.9" y="517" width="1.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="301.88" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (979,797,970 samples, 13.42%)</title><rect x="755.9" y="869" width="158.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="758.86" y="879.5" >std::__invoke_result..</text>
</g>
<g >
<title>do_softirq.part.0 (303,030,300 samples, 4.15%)</title><rect x="826.0" y="357" width="49.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="829.04" y="367.5" >do_s..</text>
</g>
<g >
<title>sock_def_readable (525,252,520 samples, 7.19%)</title><rect x="187.9" y="421" width="84.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="190.90" y="431.5" >sock_def_..</text>
</g>
<g >
<title>void std::_Bind&lt;void  (494,949,490 samples, 6.78%)</title><rect x="50.8" y="997" width="80.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="53.80" y="1007.5" >void std:..</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="932.1" y="917" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="935.13" y="927.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (101,010,100 samples, 1.38%)</title><rect x="14.9" y="1029" width="16.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="17.90" y="1039.5" ></text>
</g>
<g >
<title>ksys_read (10,101,010 samples, 0.14%)</title><rect x="775.4" y="741" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="778.45" y="751.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;muduo::Timestamp, muduo::net::Timer*&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (10,101,010 samples, 0.14%)</title><rect x="55.7" y="869" width="1.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="58.70" y="879.5" ></text>
</g>
<g >
<title>tcp_data_queue (10,101,010 samples, 0.14%)</title><rect x="298.9" y="421" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="301.88" y="431.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (747,474,740 samples, 10.24%)</title><rect x="181.4" y="725" width="120.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="184.37" y="735.5" >__dev_queue_xmit</text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, muduo::net::Channel*&gt;, std::_Select1st&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, muduo::net::Channel*&gt; &gt; &gt;::_M_lower_bound (10,101,010 samples, 0.14%)</title><rect x="933.8" y="933" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="936.76" y="943.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;void  (10,101,010 samples, 0.14%)</title><rect x="134.0" y="1077" width="1.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="137.04" y="1087.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (20,202,020 samples, 0.28%)</title><rect x="816.3" y="389" width="3.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="819.25" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (20,202,020 samples, 0.28%)</title><rect x="937.0" y="965" width="3.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="940.03" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (656,565,650 samples, 8.99%)</title><rect x="184.6" y="549" width="106.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="187.63" y="559.5" >ip_local_del..</text>
</g>
<g >
<title>__irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="166.7" y="933" width="1.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="169.68" y="943.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,101,010 samples, 0.14%)</title><rect x="166.7" y="885" width="1.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="169.68" y="895.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,202,020 samples, 0.28%)</title><rect x="468.6" y="949" width="3.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="471.62" y="959.5" ></text>
</g>
<g >
<title>mas_preallocate (10,101,010 samples, 0.14%)</title><rect x="1183.5" y="1029" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1186.47" y="1039.5" ></text>
</g>
<g >
<title>__GI___libc_write (464,646,460 samples, 6.36%)</title><rect x="958.2" y="1125" width="75.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="961.24" y="1135.5" >__GI___l..</text>
</g>
<g >
<title>__napi_poll (10,101,010 samples, 0.14%)</title><rect x="298.9" y="597" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="301.88" y="607.5" ></text>
</g>
<g >
<title>wake_up_q (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1077" width="14.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1078.75" y="1087.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1045" width="491.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="455.30" y="1055.5" >void std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>run_rebalance_domains (10,101,010 samples, 0.14%)</title><rect x="932.1" y="869" width="1.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="935.13" y="879.5" ></text>
</g>
<g >
<title>__do_softirq (717,171,710 samples, 9.82%)</title><rect x="183.0" y="677" width="115.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="186.00" y="687.5" >__do_softirq</text>
</g>
<g >
<title>tcp_stream_alloc_skb (50,505,050 samples, 0.69%)</title><rect x="334.8" y="917" width="8.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="337.79" y="927.5" ></text>
</g>
<g >
<title>process_backlog (292,929,290 samples, 4.01%)</title><rect x="827.7" y="277" width="47.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="830.68" y="287.5" >proc..</text>
</g>
<g >
<title>do_epoll_wait (1,575,757,560 samples, 21.58%)</title><rect x="471.9" y="917" width="254.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="474.88" y="927.5" >do_epoll_wait</text>
</g>
<g >
<title>run_rebalance_domains (20,202,020 samples, 0.28%)</title><rect x="295.6" y="645" width="3.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="298.62" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (10,101,010 samples, 0.14%)</title><rect x="775.4" y="693" width="1.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="778.45" y="703.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (717,171,710 samples, 9.82%)</title><rect x="183.0" y="693" width="115.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="186.00" y="703.5" >do_softirq.par..</text>
</g>
<g >
<title>tcp_data_ready (525,252,520 samples, 7.19%)</title><rect x="187.9" y="437" width="84.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="190.90" y="447.5" >tcp_data_..</text>
</g>
<g >
<title>__netif_receive_skb (292,929,290 samples, 4.01%)</title><rect x="827.7" y="261" width="47.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="830.68" y="271.5" >__ne..</text>
</g>
<g >
<title>schedule (1,313,131,300 samples, 17.98%)</title><rect x="478.4" y="853" width="212.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="481.41" y="863.5" >schedule</text>
</g>
<g >
<title>muduo::net::TimerQueue::cancelInLoop (90,909,090 samples, 1.24%)</title><rect x="14.9" y="997" width="14.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="17.90" y="1007.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1045" width="14.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1078.75" y="1055.5" ></text>
</g>
<g >
<title>mutex_unlock (10,101,010 samples, 0.14%)</title><rect x="476.8" y="885" width="1.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="479.78" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_futex (90,909,090 samples, 1.24%)</title><rect x="1075.8" y="1125" width="14.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1078.75" y="1135.5" ></text>
</g>
<g >
<title>futex_wake (292,929,290 samples, 4.01%)</title><rect x="405.0" y="1109" width="47.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="407.97" y="1119.5" >fute..</text>
</g>
<g >
<title>start_thread (3,040,404,010 samples, 41.63%)</title><rect x="452.3" y="1205" width="491.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="455.30" y="1215.5" >start_thread</text>
</g>
<g >
<title>irq_exit_rcu (10,101,010 samples, 0.14%)</title><rect x="723.2" y="821" width="1.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="726.22" y="831.5" ></text>
</g>
<g >
<title>ip_queue_xmit (404,040,400 samples, 5.53%)</title><rect x="813.0" y="517" width="65.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="815.99" y="527.5" >ip_queu..</text>
</g>
<g >
<title>muduo::net::EventLoop::runInLoop (494,949,490 samples, 6.78%)</title><rect x="50.8" y="1093" width="80.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="53.80" y="1103.5" >muduo::ne..</text>
</g>
<g >
<title>std::set&lt;std::pair&lt;muduo::net::Timer*, long&gt;, std::less&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt;, std::allocator&lt;std::pair&lt;muduo::net::Timer*, long&gt; &gt; &gt;::find (20,202,020 samples, 0.28%)</title><rect x="26.3" y="981" width="3.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="29.32" y="991.5" ></text>
</g>
<g >
<title>process_backlog (666,666,660 samples, 9.13%)</title><rect x="184.6" y="613" width="107.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="187.63" y="623.5" >process_backlog</text>
</g>
<g >
<title>do_syscall_64 (10,101,010 samples, 0.14%)</title><rect x="775.4" y="789" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="778.45" y="799.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (10,101,010 samples, 0.14%)</title><rect x="914.2" y="949" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="917.18" y="959.5" ></text>
</g>
<g >
<title>muduo::MutexLockGuard::MutexLockGuard (30,303,030 samples, 0.41%)</title><rect x="953.3" y="1141" width="4.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="956.35" y="1151.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (10,101,010 samples, 0.14%)</title><rect x="186.3" y="469" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="189.27" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,090,909,080 samples, 14.94%)</title><rect x="166.7" y="1029" width="176.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="169.68" y="1039.5" >__x64_sys_write</text>
</g>
<g >
<title>vfs_readv (696,969,690 samples, 9.54%)</title><rect x="801.6" y="709" width="112.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="804.56" y="719.5" >vfs_readv</text>
</g>
</g>
</svg>
